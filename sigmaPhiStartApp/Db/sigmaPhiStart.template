# sigmaPhiStart.template
# Template database for the Sigma Phi START Primary Switching Power Supply
# Pete Owens - 5/5/2015
#
# substitutions:
# device   - device name
# rd_port  - modbus read block port
# cmd_port - modbus command port
# set_port - modbus set current port
# max      - maximum current
#
################################################################################
# Extract from startup script to create modbus ports
#
# drvAsynIPPortConfigure ("SP1_IP", "192.168.1.121:502", 0, 0, 1)
# modbusInterposeConfig  ("SP1_IP", 0, 255, 0)
# drvModbusAsynConfigure ("SP1_RD",  "SP1_IP", 1,  3, 1, 13, 0, 1000, "SigmaPhi")
# drvModbusAsynConfigure ("SP1_CMD", "SP1_IP", 1,  6, 0,  1, 0, 1000, "SigmaPhi")
# drvModbusAsynConfigure ("SP1_SET", "SP1_IP", 1, 16, 5,  2, 0, 1000, "SigmaPhi")
#
################################################################################
# Command
#
record(mbbo, "$(device):CMD")
{
    field(DESC, "Command")
    field(DTYP, "Raw Soft Channel")
    field(OUT,  "$(device):CMD_SP PP")
    field(ZRST, "ACK")
    field(ONST, "ON")
    field(TWST, "OFF")
    field(ZRVL, "3")
    field(ONVL, "17")
    field(TWVL, "18")
}
record(longout, "$(device):CMD_SP")
{
    field(DESC, "Raw Command")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(cmd_port) 0)UINT16")
}
################################################################################
# Output Current
#
record(ai, "$(device):CURRENT_RB")
{
    field(DESC, "Output Current")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(rd_port) 0 1000)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(LINR, "LINEAR")
    field(EGU,  "A")
    field(PREC, "3")
    field(LOPR, "-$(max)")
    field(HOPR, "$(max)")
    field(LOW,  "-$(max)")
    field(HIGH, "$(max)")
    field(LOLO, "-$(max)1")
    field(HIHI, "$(max)1")
    field(LSV,  "MINOR")
    field(HSV,  "MINOR")
    field(LLSV, "MAJOR")
    field(HHSV, "MAJOR")
}
################################################################################
# Output Voltage
#
record(ai, "$(device):VOLTAGE_RB")
{
    field(DESC, "Output Voltage")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(rd_port) 2 1000)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(LINR, "LINEAR")
    field(EGU,  "V")
    field(PREC, "3")
}
################################################################################
# Current Reference
#
record(ao, "$(device):SETCURR_SP")
{
    field(DESC, "Current Reference")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(set_port) 0)FLOAT32_LE")
    field(LINR, "LINEAR")
    field(EGU,  "A")
    field(PREC, "3")
    field(DRVL, "-$(max)")
    field(DRVH, "$(max)")
    field(LOPR, "-$(max)")
    field(HOPR, "$(max)")
}
record(ai, "$(device):SETCURR_RB")
{
    field(DESC, "Current Reference")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(rd_port) 4 1000)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(LINR, "LINEAR")
    field(EGU,  "A")
    field(PREC, "3")
    field(LOPR, "-$(max)")
    field(HOPR, "$(max)")
    field(LOW,  "-$(max)")
    field(HIGH, "$(max)")
    field(LOLO, "-$(max)1")
    field(HIHI, "$(max)1")
    field(LSV,  "MINOR")
    field(HSV,  "MINOR")
    field(LLSV, "MAJOR")
    field(HHSV, "MAJOR")
}
################################################################################
# Output Current Error
#
record(ai, "$(device):CURR_ERR_RB")
{
    field(DESC, "Current Error")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(rd_port) 6 1000)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(LINR, "LINEAR")
    field(EGU,  "A")
    field(PREC, "3")
    field(LOPR, "-$(max)")
    field(HOPR, "$(max)")
    field(LOW,  "-0.1")
    field(HIGH, "0.1")
    field(LOLO, "-1.0")
    field(HIHI, "1.0")
    field(LSV,  "MINOR")
    field(HSV,  "MINOR")
    field(LLSV, "MAJOR")
    field(HHSV, "MAJOR")
}
################################################################################
# Local/Remote
#
record(bi, "$(device):REMOTE")
{
    field(DESC, "Local/Remote")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(rd_port) 8 1000)UINT16")
    field(SCAN, "I/O Intr")
    field(ZNAM, "LOCAL")
    field(ONAM, "REMOTE")
    field(FLNK, "$(device):STATUS_RB")
}
################################################################################
# Power Supply State
#
record(longin, "$(device):HWSTAT_RB")
{
    field(DESC, "Raw State")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(rd_port) 9 1000)UINT16")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(device):STATE")
}
record(mbbi, "$(device):STATE")
{
    field(DESC, "Supply State")
    field(DTYP, "Raw Soft Channel")
    field(INP,  "$(device):HWSTAT_RB MS")
    field(UNSV, "MAJOR")

    field(ZRVL, "255")
    field(ZRST, "START")
    field(ONVL, "1")
    field(ONST, "START")

    field(TWVL, "128")
    field(TWST, "FAULT")
    field(TWSV, "MAJOR")

    field(THVL, "129")
    field(THST, "ACK_SEQ (0x81)")
    field(THSV, "MAJOR")
    field(FRVL, "130")
    field(FRST, "ACK_SEQ (0x82)")
    field(FRSV, "MAJOR")
    field(FVVL, "131")
    field(FVST, "ACK_SEQ (0x83)")
    field(FVSV, "MAJOR")

    field(SXVL, "34")
    field(SXST, "IDLE")

    field(SVVL, "36")
    field(SVST, "INRUSH_SEQ (0x24)")
    field(SVSV, "MINOR")
    field(EIVL, "37")
    field(EIST, "INRUSH_SEQ (0x25)")
    field(EISV, "MINOR")
    field(NIVL, "38")
    field(NIST, "INRUSH_SEQ (0x26)")
    field(NISV, "MINOR")
    field(TEVL, "49")
    field(TEST, "INRUSH_SEQ (0x31)")
    field(TESV, "MINOR")
    field(ELVL, "50")
    field(ELST, "INRUSH_SEQ (0x32)")
    field(ELSV, "MINOR")
    field(TVVL, "51")
    field(TVST, "INRUSH_SEQ (0x33)")
    field(TVSV, "MINOR")

    field(TTVL, "39")
    field(TTST, "ON")

    field(FTVL, "41")
    field(FTST, "STOPPING")

    field(FLNK, "$(device):ON")
}
record(calc, "$(device):ON")
{
    field(DESC, "Power On")
    field(CALC, "A=39")
    field(INPA,  "$(device):HWSTAT_RB MS")
    field(FLNK, "$(device):FAULT")
}
record(calc, "$(device):FAULT")
{
    field(DESC, "Fault")
    field(CALC, "A>127&&A<132")
    field(INPA, "$(device):HWSTAT_RB MS")
    field(FLNK, "$(device):STATUS_RB")
}
record(calc, "$(device):STATUS_RB")
{
    field(DESC, "Generic status record - ON+REMOTE")
    field(CALC, "(A=39?(B#0?1:3):1)")
    field(INPA, "$(device):HWSTAT_RB MS")
    field(INPB, "$(device):REMOTE MS")
    field(FLNK, "$(device):SEQ")
}
record(calc, "$(device):SEQ")
{
    field(DESC, "Performing Sequence")
    field(CALC, "A>35&&A<39||A>48&&A<52||A>128&&A<132")
    field(INPA, "$(device):HWSTAT_RB MS")
}
################################################################################
# Software Interlocks
#
#record(mbbiDirect, "$(device):SWILK") "
record(longin, "$(device):SWILK")
{
    field(DESC, "Software Interlocks")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(rd_port) 10 1000)UINT16")
    field(SCAN, "I/O Intr")
}
################################################################################
# Hardware Interlocks
#
record(longin, "$(device):HWILK")
{
    field(DESC, "Hardware Interlocks")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(rd_port) 11 1000)UINT16")
    field(SCAN, "I/O Intr")
}
################################################################################

